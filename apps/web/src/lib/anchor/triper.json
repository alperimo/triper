{
  "address": "Fn6rAGhjUc45tQqfgsXCdNtNC3GSfNWdjHEjpHaUJMaY",
  "metadata": {
    "name": "triper",
    "version": "0.1.0",
    "spec": "0.1.0",
    "description": "Privacy-preserving travel companion matching using Arcium MPC"
  },
  "instructions": [
    {
      "name": "accept_match",
      "discriminator": [
        47,
        107,
        76,
        149,
        208,
        223,
        186,
        191
      ],
      "accounts": [
        {
          "name": "match_account",
          "writable": true
        },
        {
          "name": "trip",
          "docs": [
            "Trip account to verify ownership"
          ]
        },
        {
          "name": "user",
          "signer": true
        }
      ],
      "args": []
    },
    {
      "name": "compute_trip_match",
      "docs": [
        "Queue a confidential trip matching computation",
        "Encrypted data is sent to Arcium MPC network"
      ],
      "discriminator": [
        207,
        51,
        58,
        206,
        255,
        202,
        152,
        231
      ],
      "accounts": [
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "sign_pda_account",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  83,
                  105,
                  103,
                  110,
                  101,
                  114,
                  65,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              }
            ]
          }
        },
        {
          "name": "mxe_account"
        },
        {
          "name": "mempool_account",
          "writable": true
        },
        {
          "name": "executing_pool",
          "writable": true
        },
        {
          "name": "computation_account",
          "writable": true
        },
        {
          "name": "comp_def_account"
        },
        {
          "name": "cluster_account",
          "writable": true
        },
        {
          "name": "pool_account",
          "writable": true,
          "address": "7MGSS4iKNM4sVib7bDZDJhVqB6EcchPwVnTKenCY1jt3"
        },
        {
          "name": "clock_account",
          "address": "FHriyvoZotYiFnbUzKFjzRSb2NiaC8RPWY7jtKuKhg65"
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        },
        {
          "name": "arcium_program",
          "address": "BKck65TgoKRokMjQM3datB9oRwJ8rAj2jxPXvHXUvcL6"
        },
        {
          "name": "match_record",
          "docs": [
            "Match record to be updated in callback"
          ],
          "writable": true
        }
      ],
      "args": [
        {
          "name": "computation_offset",
          "type": "u64"
        },
        {
          "name": "ciphertext_a",
          "type": {
            "array": [
              "u8",
              32
            ]
          }
        },
        {
          "name": "ciphertext_b",
          "type": {
            "array": [
              "u8",
              32
            ]
          }
        },
        {
          "name": "pub_key",
          "type": {
            "array": [
              "u8",
              32
            ]
          }
        },
        {
          "name": "nonce",
          "type": "u128"
        }
      ]
    },
    {
      "name": "compute_trip_match_callback",
      "docs": [
        "Callback handler - receives match results from MPC network",
        "Updates MatchRecord with computed scores"
      ],
      "discriminator": [
        54,
        121,
        20,
        113,
        29,
        143,
        102,
        131
      ],
      "accounts": [
        {
          "name": "arcium_program",
          "address": "BKck65TgoKRokMjQM3datB9oRwJ8rAj2jxPXvHXUvcL6"
        },
        {
          "name": "comp_def_account"
        },
        {
          "name": "instructions_sysvar",
          "address": "Sysvar1nstructions1111111111111111111111111"
        },
        {
          "name": "computation_account",
          "writable": true
        },
        {
          "name": "match_record",
          "docs": [
            "Match record to update with scores (passed via remaining accounts)"
          ],
          "writable": true
        }
      ],
      "args": [
        {
          "name": "output",
          "type": {
            "defined": {
              "name": "ComputationOutputs",
              "generics": [
                {
                  "kind": "type",
                  "type": {
                    "defined": {
                      "name": "ComputeTripMatchOutput"
                    }
                  }
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "create_trip",
      "docs": [
        "Create a new trip with encrypted data"
      ],
      "discriminator": [
        52,
        111,
        109,
        110,
        255,
        25,
        133,
        204
      ],
      "accounts": [
        {
          "name": "trip",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  116,
                  114,
                  105,
                  112
                ]
              },
              {
                "kind": "account",
                "path": "user"
              },
              {
                "kind": "arg",
                "path": "start_date"
              }
            ]
          }
        },
        {
          "name": "user",
          "writable": true,
          "signer": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "destination_grid_hash",
          "type": {
            "array": [
              "u8",
              32
            ]
          }
        },
        {
          "name": "start_date",
          "type": "i64"
        },
        {
          "name": "end_date",
          "type": "i64"
        },
        {
          "name": "encrypted_data",
          "type": "bytes"
        },
        {
          "name": "public_key",
          "type": {
            "array": [
              "u8",
              32
            ]
          }
        }
      ]
    },
    {
      "name": "deactivate_trip",
      "docs": [
        "Deactivate a trip"
      ],
      "discriminator": [
        195,
        147,
        215,
        89,
        103,
        18,
        151,
        164
      ],
      "accounts": [
        {
          "name": "trip",
          "writable": true
        },
        {
          "name": "user",
          "signer": true
        }
      ],
      "args": []
    },
    {
      "name": "init_compute_trip_match_comp_def",
      "docs": [
        "Initialize the computation definition for match computation",
        "Must be called once after program deployment"
      ],
      "discriminator": [
        125,
        30,
        108,
        170,
        96,
        215,
        160,
        202
      ],
      "accounts": [
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "mxe_account",
          "writable": true
        },
        {
          "name": "comp_def_account",
          "writable": true
        },
        {
          "name": "arcium_program",
          "address": "BKck65TgoKRokMjQM3datB9oRwJ8rAj2jxPXvHXUvcL6"
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": []
    },
    {
      "name": "initiate_match",
      "docs": [
        "Initiate a match computation between two trips",
        "Creates MatchRecord in Pending status"
      ],
      "discriminator": [
        32,
        85,
        207,
        130,
        197,
        172,
        21,
        2
      ],
      "accounts": [
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "trip_a",
          "docs": [
            "First trip (requester's trip)"
          ],
          "writable": true
        },
        {
          "name": "trip_b",
          "docs": [
            "Second trip (potential match)"
          ],
          "writable": true
        },
        {
          "name": "match_record",
          "docs": [
            "Match record PDA: [b\"match\", trip_a, trip_b]"
          ],
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  109,
                  97,
                  116,
                  99,
                  104
                ]
              },
              {
                "kind": "account",
                "path": "trip_a"
              },
              {
                "kind": "account",
                "path": "trip_b"
              }
            ]
          }
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": []
    },
    {
      "name": "reject_match",
      "docs": [
        "Reject a match"
      ],
      "discriminator": [
        72,
        204,
        109,
        175,
        97,
        58,
        186,
        28
      ],
      "accounts": [
        {
          "name": "match_account",
          "writable": true
        },
        {
          "name": "trip",
          "docs": [
            "Trip account to verify ownership"
          ]
        },
        {
          "name": "user",
          "signer": true
        }
      ],
      "args": []
    }
  ],
  "accounts": [
    {
      "name": "ClockAccount",
      "discriminator": [
        152,
        171,
        158,
        195,
        75,
        61,
        51,
        8
      ]
    },
    {
      "name": "Cluster",
      "discriminator": [
        236,
        225,
        118,
        228,
        173,
        106,
        18,
        60
      ]
    },
    {
      "name": "ComputationDefinitionAccount",
      "discriminator": [
        245,
        176,
        217,
        221,
        253,
        104,
        172,
        200
      ]
    },
    {
      "name": "FeePool",
      "discriminator": [
        172,
        38,
        77,
        146,
        148,
        5,
        51,
        242
      ]
    },
    {
      "name": "MXEAccount",
      "discriminator": [
        103,
        26,
        85,
        250,
        179,
        159,
        17,
        117
      ]
    },
    {
      "name": "MatchRecord",
      "discriminator": [
        114,
        83,
        48,
        236,
        239,
        237,
        21,
        85
      ]
    },
    {
      "name": "SignerAccount",
      "discriminator": [
        127,
        212,
        7,
        180,
        17,
        50,
        249,
        193
      ]
    },
    {
      "name": "Trip",
      "discriminator": [
        181,
        162,
        236,
        3,
        69,
        140,
        211,
        173
      ]
    }
  ],
  "events": [
    {
      "name": "MatchComputationCompleted",
      "discriminator": [
        144,
        2,
        83,
        195,
        43,
        41,
        170,
        35
      ]
    },
    {
      "name": "MatchComputationRequested",
      "discriminator": [
        12,
        1,
        109,
        38,
        116,
        241,
        49,
        206
      ]
    },
    {
      "name": "MatchComputedEvent",
      "discriminator": [
        219,
        30,
        176,
        98,
        64,
        2,
        23,
        185
      ]
    },
    {
      "name": "TripCreated",
      "discriminator": [
        66,
        48,
        64,
        12,
        89,
        157,
        28,
        249
      ]
    }
  ],
  "errors": [
    {
      "code": 6000,
      "name": "InvalidMatchStatus",
      "msg": "Invalid match status for this operation"
    },
    {
      "code": 6001,
      "name": "Unauthorized",
      "msg": "User not authorized for this operation"
    },
    {
      "code": 6002,
      "name": "TripNotActive",
      "msg": "Trip is not active"
    },
    {
      "code": 6003,
      "name": "InvalidMxeAccount",
      "msg": "Invalid MXE account reference"
    },
    {
      "code": 6004,
      "name": "ComputationFailed",
      "msg": "MPC computation failed or was aborted"
    },
    {
      "code": 6005,
      "name": "ClusterNotSet",
      "msg": "Cluster not set"
    },
    {
      "code": 6006,
      "name": "EncryptedDataTooLarge",
      "msg": "Encrypted data exceeds 2048 bytes"
    },
    {
      "code": 6007,
      "name": "InvalidDateRange",
      "msg": "End date must be after start date"
    },
    {
      "code": 6008,
      "name": "SameTripMatch",
      "msg": "Cannot match trip with itself"
    },
    {
      "code": 6009,
      "name": "QuotaExceeded",
      "msg": "Match quota exceeded"
    },
    {
      "code": 6010,
      "name": "InsufficientFunds",
      "msg": "Insufficient funds for match computation"
    },
    {
      "code": 6011,
      "name": "InvalidScore",
      "msg": "Invalid score value (must be 0-100)"
    }
  ],
  "types": [
    {
      "name": "Activation",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "activation_epoch",
            "type": {
              "defined": {
                "name": "Epoch"
              }
            }
          },
          {
            "name": "deactivation_epoch",
            "type": {
              "defined": {
                "name": "Epoch"
              }
            }
          }
        ]
      }
    },
    {
      "name": "CircuitSource",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Local",
            "fields": [
              {
                "defined": {
                  "name": "LocalCircuitSource"
                }
              }
            ]
          },
          {
            "name": "OnChain",
            "fields": [
              {
                "defined": {
                  "name": "OnChainCircuitSource"
                }
              }
            ]
          },
          {
            "name": "OffChain",
            "fields": [
              {
                "defined": {
                  "name": "OffChainCircuitSource"
                }
              }
            ]
          }
        ]
      }
    },
    {
      "name": "ClockAccount",
      "docs": [
        "An account storing the current network epoch"
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "start_epoch",
            "type": {
              "defined": {
                "name": "Epoch"
              }
            }
          },
          {
            "name": "current_epoch",
            "type": {
              "defined": {
                "name": "Epoch"
              }
            }
          },
          {
            "name": "start_epoch_timestamp",
            "type": {
              "defined": {
                "name": "Timestamp"
              }
            }
          },
          {
            "name": "bump",
            "type": "u8"
          }
        ]
      }
    },
    {
      "name": "Cluster",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "authority",
            "type": {
              "option": "pubkey"
            }
          },
          {
            "name": "max_size",
            "type": "u32"
          },
          {
            "name": "activation",
            "type": {
              "defined": {
                "name": "Activation"
              }
            }
          },
          {
            "name": "max_capacity",
            "type": "u64"
          },
          {
            "name": "cu_price",
            "type": "u64"
          },
          {
            "name": "cu_price_proposals",
            "type": {
              "array": [
                "u64",
                32
              ]
            }
          },
          {
            "name": "last_updated_epoch",
            "type": {
              "defined": {
                "name": "Epoch"
              }
            }
          },
          {
            "name": "mxes",
            "type": {
              "vec": "pubkey"
            }
          },
          {
            "name": "nodes",
            "type": {
              "vec": {
                "defined": {
                  "name": "NodeRef"
                }
              }
            }
          },
          {
            "name": "pending_nodes",
            "type": {
              "vec": {
                "defined": {
                  "name": "NodeRef"
                }
              }
            }
          },
          {
            "name": "bump",
            "type": "u8"
          }
        ]
      }
    },
    {
      "name": "ComputationDefinitionAccount",
      "docs": [
        "An account representing a [ComputationDefinition] in a MXE."
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "finalization_authority",
            "type": {
              "option": "pubkey"
            }
          },
          {
            "name": "finalize_during_callback",
            "type": "bool"
          },
          {
            "name": "cu_amount",
            "type": "u64"
          },
          {
            "name": "definition",
            "type": {
              "defined": {
                "name": "ComputationDefinitionMeta"
              }
            }
          },
          {
            "name": "circuit_source",
            "type": {
              "defined": {
                "name": "CircuitSource"
              }
            }
          },
          {
            "name": "bump",
            "type": "u8"
          }
        ]
      }
    },
    {
      "name": "ComputationDefinitionMeta",
      "docs": [
        "A computation definition for execution in a MXE."
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "circuit_len",
            "type": "u32"
          },
          {
            "name": "signature",
            "type": {
              "defined": {
                "name": "ComputationSignature"
              }
            }
          }
        ]
      }
    },
    {
      "name": "ComputationOutputs",
      "generics": [
        {
          "kind": "type",
          "name": "O"
        }
      ],
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Success",
            "fields": [
              {
                "generic": "O"
              }
            ]
          },
          {
            "name": "Failure"
          }
        ]
      }
    },
    {
      "name": "ComputationSignature",
      "docs": [
        "The signature of a computation defined in a [ComputationDefinition]."
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "parameters",
            "type": {
              "vec": {
                "defined": {
                  "name": "Parameter"
                }
              }
            }
          },
          {
            "name": "outputs",
            "type": {
              "vec": {
                "defined": {
                  "name": "Output"
                }
              }
            }
          }
        ]
      }
    },
    {
      "name": "ComputeTripMatchOutput",
      "docs": [
        "The output of the callback instruction. Provided as a struct with ordered fields",
        "as anchor does not support tuples and tuple structs yet."
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "field_0",
            "type": {
              "defined": {
                "name": "ComputeTripMatchOutputStruct0"
              }
            }
          }
        ]
      }
    },
    {
      "name": "ComputeTripMatchOutputStruct0",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "field_0",
            "type": "u8"
          },
          {
            "name": "field_1",
            "type": "u8"
          },
          {
            "name": "field_2",
            "type": "u8"
          },
          {
            "name": "field_3",
            "type": "u8"
          }
        ]
      }
    },
    {
      "name": "Epoch",
      "docs": [
        "The network epoch"
      ],
      "type": {
        "kind": "struct",
        "fields": [
          "u64"
        ]
      }
    },
    {
      "name": "FeePool",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "bump",
            "type": "u8"
          }
        ]
      }
    },
    {
      "name": "LocalCircuitSource",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "MxeKeygen"
          }
        ]
      }
    },
    {
      "name": "MXEAccount",
      "docs": [
        "A MPC Execution Environment."
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "authority",
            "type": {
              "option": "pubkey"
            }
          },
          {
            "name": "cluster",
            "type": {
              "option": "u32"
            }
          },
          {
            "name": "x25519_pubkey",
            "type": {
              "defined": {
                "name": "X25519Pubkey"
              }
            }
          },
          {
            "name": "fallback_clusters",
            "type": {
              "vec": "u32"
            }
          },
          {
            "name": "rejected_clusters",
            "type": {
              "vec": "u32"
            }
          },
          {
            "name": "computation_definitions",
            "type": {
              "vec": "u32"
            }
          },
          {
            "name": "bump",
            "type": "u8"
          }
        ]
      }
    },
    {
      "name": "MatchComputationCompleted",
      "docs": [
        "Emitted when MPC computation completes and scores are stored"
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "match_record",
            "docs": [
              "Match record PDA"
            ],
            "type": "pubkey"
          },
          {
            "name": "trip_a",
            "docs": [
              "First trip"
            ],
            "type": "pubkey"
          },
          {
            "name": "trip_b",
            "docs": [
              "Second trip"
            ],
            "type": "pubkey"
          },
          {
            "name": "route_score",
            "docs": [
              "Route similarity score (0-100)"
            ],
            "type": "u8"
          },
          {
            "name": "date_score",
            "docs": [
              "Date overlap score (0-100)"
            ],
            "type": "u8"
          },
          {
            "name": "interest_score",
            "docs": [
              "Interest similarity score (0-100)"
            ],
            "type": "u8"
          },
          {
            "name": "total_score",
            "docs": [
              "Total match score (0-100)"
            ],
            "type": "u8"
          },
          {
            "name": "computation_id",
            "docs": [
              "Arcium computation ID"
            ],
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          },
          {
            "name": "timestamp",
            "docs": [
              "Completion timestamp"
            ],
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "MatchComputationRequested",
      "docs": [
        "Emitted when a match computation is requested",
        "Off-chain MPC service listens for this event"
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "match_record",
            "docs": [
              "Match record PDA"
            ],
            "type": "pubkey"
          },
          {
            "name": "trip_a",
            "docs": [
              "First trip"
            ],
            "type": "pubkey"
          },
          {
            "name": "trip_b",
            "docs": [
              "Second trip"
            ],
            "type": "pubkey"
          },
          {
            "name": "encrypted_data_a",
            "docs": [
              "Encrypted trip data A (ciphertext)"
            ],
            "type": "bytes"
          },
          {
            "name": "encrypted_data_b",
            "docs": [
              "Encrypted trip data B (ciphertext)"
            ],
            "type": "bytes"
          },
          {
            "name": "public_key_a",
            "docs": [
              "Public key for trip A (x25519)"
            ],
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          },
          {
            "name": "public_key_b",
            "docs": [
              "Public key for trip B (x25519)"
            ],
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          },
          {
            "name": "requester",
            "docs": [
              "User who requested the match"
            ],
            "type": "pubkey"
          },
          {
            "name": "timestamp",
            "docs": [
              "Request timestamp"
            ],
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "MatchComputedEvent",
      "docs": [
        "Legacy event for MPC callback (from compute_trip_match callback)"
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "computation_account",
            "type": "pubkey"
          },
          {
            "name": "route_score",
            "type": "u8"
          },
          {
            "name": "date_score",
            "type": "u8"
          },
          {
            "name": "interest_score",
            "type": "u8"
          },
          {
            "name": "total_score",
            "type": "u8"
          }
        ]
      }
    },
    {
      "name": "MatchRecord",
      "docs": [
        "Match record - Stores match status and detailed scores",
        "Computation happens via Arcium MXE confidential circuit"
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "trip_a",
            "docs": [
              "First trip public key"
            ],
            "type": "pubkey"
          },
          {
            "name": "trip_b",
            "docs": [
              "Second trip public key"
            ],
            "type": "pubkey"
          },
          {
            "name": "total_score",
            "docs": [
              "Total match score (0-100)"
            ],
            "type": "u8"
          },
          {
            "name": "route_score",
            "docs": [
              "Route similarity score (0-100)"
            ],
            "type": "u8"
          },
          {
            "name": "date_score",
            "docs": [
              "Date overlap score (0-100)"
            ],
            "type": "u8"
          },
          {
            "name": "interest_score",
            "docs": [
              "Interest similarity score (0-100)"
            ],
            "type": "u8"
          },
          {
            "name": "status",
            "docs": [
              "Match status"
            ],
            "type": {
              "defined": {
                "name": "MatchStatus"
              }
            }
          },
          {
            "name": "trip_a_accepted",
            "docs": [
              "Whether trip_a owner accepted"
            ],
            "type": "bool"
          },
          {
            "name": "trip_b_accepted",
            "docs": [
              "Whether trip_b owner accepted"
            ],
            "type": "bool"
          },
          {
            "name": "created_at",
            "docs": [
              "Creation timestamp"
            ],
            "type": "i64"
          },
          {
            "name": "computation_id",
            "docs": [
              "Arcium computation ID (for tracking MXE execution)"
            ],
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          },
          {
            "name": "bump",
            "docs": [
              "Bump seed for PDA"
            ],
            "type": "u8"
          }
        ]
      }
    },
    {
      "name": "MatchStatus",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Pending"
          },
          {
            "name": "Completed"
          },
          {
            "name": "Mutual"
          },
          {
            "name": "Rejected"
          }
        ]
      }
    },
    {
      "name": "NodeRef",
      "docs": [
        "A reference to a node in the cluster.",
        "The offset is to derive the Node Account.",
        "The current_total_rewards is the total rewards the node has received so far in the current",
        "epoch."
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "offset",
            "type": "u32"
          },
          {
            "name": "current_total_rewards",
            "type": "u64"
          },
          {
            "name": "vote",
            "type": "u8"
          }
        ]
      }
    },
    {
      "name": "OffChainCircuitSource",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "source",
            "type": "string"
          },
          {
            "name": "hash",
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          }
        ]
      }
    },
    {
      "name": "OnChainCircuitSource",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "is_completed",
            "type": "bool"
          },
          {
            "name": "upload_auth",
            "type": "pubkey"
          }
        ]
      }
    },
    {
      "name": "Output",
      "docs": [
        "An output of a computation.",
        "We currently don't support encrypted outputs yet since encrypted values are passed via",
        "data objects."
      ],
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "PlaintextBool"
          },
          {
            "name": "PlaintextU8"
          },
          {
            "name": "PlaintextU16"
          },
          {
            "name": "PlaintextU32"
          },
          {
            "name": "PlaintextU64"
          },
          {
            "name": "PlaintextU128"
          },
          {
            "name": "Ciphertext"
          },
          {
            "name": "ArcisPubkey"
          },
          {
            "name": "PlaintextFloat"
          }
        ]
      }
    },
    {
      "name": "Parameter",
      "docs": [
        "A parameter of a computation.",
        "We differentiate between plaintext and encrypted parameters and data objects.",
        "Plaintext parameters are directly provided as their value.",
        "Encrypted parameters are provided as an offchain reference to the data.",
        "Data objects are provided as a reference to the data object account."
      ],
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "PlaintextBool"
          },
          {
            "name": "PlaintextU8"
          },
          {
            "name": "PlaintextU16"
          },
          {
            "name": "PlaintextU32"
          },
          {
            "name": "PlaintextU64"
          },
          {
            "name": "PlaintextU128"
          },
          {
            "name": "Ciphertext"
          },
          {
            "name": "ArcisPubkey"
          },
          {
            "name": "ArcisSignature"
          },
          {
            "name": "PlaintextFloat"
          },
          {
            "name": "ManticoreAlgo"
          },
          {
            "name": "InputDataset"
          }
        ]
      }
    },
    {
      "name": "SignerAccount",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "bump",
            "type": "u8"
          }
        ]
      }
    },
    {
      "name": "Timestamp",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "timestamp",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "Trip",
      "docs": [
        "Trip account with destination-based matching",
        "Two-stage architecture:",
        "1. Pre-filtering: Uses destination_grid_hash + dates (public, coarse)",
        "2. MPC Computation: Uses encrypted_data (precise waypoints)"
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "owner",
            "docs": [
              "Owner's public key"
            ],
            "type": "pubkey"
          },
          {
            "name": "destination_grid_hash",
            "docs": [
              "Destination grid hash for pre-filtering (coarse, H3 level 6 = ~36km²)",
              "Example: SHA256(\"Tokyo_Shibuya_area\")"
            ],
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          },
          {
            "name": "start_date",
            "docs": [
              "Trip date range (public for pre-filtering)"
            ],
            "type": "i64"
          },
          {
            "name": "end_date",
            "type": "i64"
          },
          {
            "name": "encrypted_data",
            "docs": [
              "Encrypted trip data for MPC computation",
              "Contains: precise waypoints[], interests[], preferences",
              "Format: x25519 + RescueCipher encrypted TripData struct"
            ],
            "type": "bytes"
          },
          {
            "name": "public_key",
            "docs": [
              "Public key for MPC (x25519)"
            ],
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          },
          {
            "name": "is_active",
            "docs": [
              "Whether trip is active for matching"
            ],
            "type": "bool"
          },
          {
            "name": "match_count",
            "docs": [
              "Number of match computations performed"
            ],
            "type": "u32"
          },
          {
            "name": "created_at",
            "docs": [
              "Creation timestamp"
            ],
            "type": "i64"
          },
          {
            "name": "bump",
            "docs": [
              "Bump seed for PDA derivation"
            ],
            "type": "u8"
          }
        ]
      }
    },
    {
      "name": "TripCreated",
      "docs": [
        "Emitted when a trip is created"
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "trip",
            "docs": [
              "Trip PDA"
            ],
            "type": "pubkey"
          },
          {
            "name": "owner",
            "docs": [
              "Trip owner"
            ],
            "type": "pubkey"
          },
          {
            "name": "destination_grid_hash",
            "docs": [
              "Destination grid hash (for pre-filtering)"
            ],
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          },
          {
            "name": "start_date",
            "docs": [
              "Trip start date"
            ],
            "type": "i64"
          },
          {
            "name": "end_date",
            "docs": [
              "Trip end date"
            ],
            "type": "i64"
          },
          {
            "name": "timestamp",
            "docs": [
              "Creation timestamp"
            ],
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "X25519Pubkey",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Set",
            "fields": [
              {
                "array": [
                  "u8",
                  32
                ]
              }
            ]
          },
          {
            "name": "Unset",
            "fields": [
              {
                "array": [
                  "u8",
                  32
                ]
              },
              {
                "vec": "bool"
              }
            ]
          }
        ]
      }
    }
  ]
}